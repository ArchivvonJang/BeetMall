<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.beetmall.sshj.seller.dao.ProductDAO">
	<select id="productAllSelect"  resultType="com.beetmall.sshj.seller.vo.ProductVO" parameterType="com.beetmall.sshj.seller.vo.SearchAndPageVO" >
		select*from
		(select*from
		(select catenum, catename, mcatenum, mcatename, productnum, productname, userid,
	        productprice, saleselect, optionselect, saleb, sellstart, sellfinish, thumbimg,
	        saleprice, to_number(productprice - saleprice) sellprice, floor((saleprice/productprice)*100) as salepercent, 
	        salestart, salefinish,
	        NVL( sum(orderquantity) , 0) as soldstock, to_number(totalstock- NVL( sum(orderquantity) , 0)) as nowstock ,totalstock,
            optionprice, optionstock, optionname, deliveryprice, paymentoption, selloption, sellweight, origin, wrapping, productinfomation, prevention, deadline 
			from 
			    (select c.catenum,c.catename,m.mcatenum, m.mcatename,  
			        nvl(o.orderquantity,0) orderquantity , p.productnum, p.productname, p.userid, p.totalstock, p.thumbimg, p.productprice, p.saleselect, p.optionselect, p.saleb,
			        to_char(p.sellstart,'YY/MM/DD') as sellstart, to_char(p.sellfinish,'YY/MM/DD') as sellfinish ,
			         nvl(d.saleprice,0) saleprice, to_char(d.salestart, 'YY/MM/DD') as salestart, to_char(d.salefinish, 'YY/MM/DD') as salefinish,
                     nvl(o.optionprice,0) optionprice, nvl(o.optionstock,0) optionstock, o.optionname,
                     p.deliveryoption, nvl(p.deliveryprice,0 ) deliveryprice, p.paymentoption, p.selloption, p.sellweight, p.origin, p.wrapping, p.productinfomation, p.prevention, p.deadline
			        from product p
			        left join orderdetail o on p.productnum = o.productnum 
			        join mcategory m on p.mcatenum = m.mcatenum
			        join category c on c.catenum = m.catenum
			        left join discount d on p.productnum = d.productnum
                    left join optiontbl o on p.productnum = o.productnum
                	<choose>
						<when test = 'searchWord!=null or searchWord != " "'>
							where p.userid='${userid}'
							and ( p.productnum like '%${searchWord}%'
							or c.catenum like '%${searchWord}%'
							or c.catename like '%${searchWord}%'
							or m.catenum like '%${searchWord}%'
							or m.mcatename like '%${searchWord}%'
							or p.productname like '%${searchWord}%'
							or p.productprice like '%${searchWord}%'
							or d.saleprice like '%${searchWord}%'
							or sellstart like '%${searchWord}%'
							or sellstart like '%${searchWord}%' )
						</when>
						<when test = 'searchWord==null or searchWord == " " '>
							where p.userid='${userid}'
						</when>
					</choose>
			       group by  c.catenum,c.catename, m.mcatenum, m.mcatename, p.totalstock,p.productnum, p.productname, p.userid, o.ordernum, o.orderquantity, p.productprice, p.saleselect, p.optionselect, p.saleb,
			                    p.sellstart, p.sellfinish, p.thumbimg, d.saleprice, d.salestart, d.salefinish, o.optionprice, o.optionstock, o.optionname, 
                                p.deliveryoption, p.deliveryprice, p.paymentoption, p.selloption, p.sellweight, p.origin, p.wrapping, p.productinfomation, p.prevention, p.deadline) 
				group by catenum, catename, mcatenum, mcatename, productnum, userid,  productname, totalstock,  productprice, saleselect, optionselect, saleb, sellstart, sellfinish,
				        thumbimg, saleprice, salestart, salefinish,optionprice, optionstock, optionname, deliveryprice, paymentoption, selloption, sellweight, origin, wrapping, productinfomation, prevention, deadline 
				order by productnum desc)
		<![CDATA[where rownum<=]]>(${pageNum}*${onePageRecord}) order by productnum)
        <![CDATA[where rownum<=]]>
        <if test="pageNum==totalPage">${lastPageRecord}</if>
        <if test="pageNum!=totalPage">${onePageRecord}</if>
        order by productnum desc
	</select>
	<select id="stockSelect" resultType="com.beetmall.sshj.seller.vo.ProductVO" parameterType="com.beetmall.sshj.seller.vo.SearchAndPageVO" >
		select productnum, NVL( sum(orderquantity) , 0) as soldstock, to_number(totalstock- NVL( sum(orderquantity) , 0)) as nowstock ,totalstock 
            from 
                (select p.totalstock, p.productnum, o.orderquantity 
                from orderdetail o
                right join product p on p.productnum = o.productnum 
                where p.userid = '${userid}' 
                group by p.totalstock,p.productnum, o.ordernum, o.orderquantity) 
            group by productnum, totalstock   
	</select>
	<select id="totalRecord" parameterType="com.beetmall.sshj.seller.vo.SearchAndPageVO" resultType="int">
		select count(productnum) totalRecord from product where userid='${userid}'
	</select>
	
	<insert id="productInsert" parameterType="com.beetmall.sshj.seller.vo.ProductVO">
		insert into product (productnum, userid, mcatenum, productname, productprice, saleselect, saleb, optionselect,
								sellstart, sellfinish,
								totalstock, nowstock, thumbimg, productcontent, deliveryoption, deliveryprice, paymentoption, selloption, sellweight,origin, wrapping, productinfomation, prevention, deadline)       			
       	values(productsq.nextval, '${userid}' , ${mcatenum}, '${productname}', ${productprice}, '${saleselect}', '${saleb}', '${optionselect}',
       			'${sellstart}','${sellfinish}', ${totalstock}, ${totalstock},'${thumbimg}',
       			'${productcontent}', '${deliveryoption}', ${deliveryprice}, '${paymentoption}', '${selloption}', '${sellweight}', 
       			'${origin}', '${wrapping}', '${productinfomation}', '${prevention}', '${deadline}')     
    		  				
	</insert>
	<insert id="discountInsert" parameterType="com.beetmall.sshj.seller.vo.ProductVO">
		insert into discount 
		(productnum, saleprice, salestart,  salefinish)
		values(productsq.currval, ${saleprice}, '${salestart}', '${salefinish}')				

	</insert>
	<insert id="optionInsert" parameterType="com.beetmall.sshj.seller.vo.ProductVO">
		insert into optiontbl
		(optionnum, productnum, optionname, optionstock, optionnowstock, optionprice)
		values
		(optionsq.nextval, productsq.currval, '${optioname}' ,${optionstock}, ${optionstock}, ${optionprice} )
	</insert>
	<delete id="productDelete">
		delete from product where productnum=#{param1}
	</delete>
	<select id="productOneSelect"  resultType="com.beetmall.sshj.seller.vo.ProductVO" >
	   select c.catenum,c.catename,m.mcatenum, m.mcatename, p.userid,
			  nvl(o.orderquantity,0) orderquantity , p.productnum, p.productname, p.userid, p.totalstock, p.thumbimg, p.productprice, p.saleselect, p.optionselect, p.saleb,
			  to_char(p.sellstart,'YYYY-MM-DD') as sellstart, to_char(p.sellfinish,'YYYY-MM-DD') as sellfinish ,
			  nvl(d.saleprice,0) saleprice, to_char(d.salestart, 'YY/MM/DD') as salestart, to_char(d.salefinish, 'YYYY-MM-DD') as salefinish,
              nvl(o.optionprice,0) optionprice, nvl(o.optionstock,0) optionstock, o.optionname,
              p.deliveryoption, nvl(p.deliveryprice,0 ) deliveryprice, p.paymentoption, p.selloption, p.sellweight, p.origin, p.wrapping, p.productinfomation, p.prevention, p.deadline
		from product p
		left join orderdetail o on p.productnum = o.productnum 
		join mcategory m on p.mcatenum = m.mcatenum
		join category c on c.catenum = m.catenum
		left join discount d on p.productnum = d.productnum
        left join optiontbl o on p.productnum = o.productnum
        where  p.productnum = ${productnum}
		group by  c.catenum,c.catename, m.mcatenum, m.mcatename, p.totalstock,p.productnum, p.productname, p.userid, o.ordernum, o.orderquantity, p.productprice, p.saleselect, p.optionselect, p.saleb,
			   p.sellstart, p.sellfinish, p.thumbimg, d.saleprice, d.salestart, d.salefinish, o.optionprice, o.optionstock, o.optionname, 
               p.deliveryoption, p.deliveryprice, p.paymentoption, p.selloption, p.sellweight, p.origin, p.wrapping, p.productinfomation, p.prevention, p.deadline
       order by productnum desc
	</select>
</mapper>